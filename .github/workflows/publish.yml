name: Docker

on:
  schedule:
    - cron: '0 3 * * 0,3,6'
  workflow_dispatch:
  pull_request:
    branches: [ 'master' ]
  push:
    tags: [ 'v*' ]

env:
  BUILDKIT_PROGRESS: plain
  REGISTRY: ${{ vars.REGISTRY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  REPO: ${{ vars.REPO }}

jobs:
  pre-build:
    runs-on: ubuntu-latest
    permissions:
      actions: write  # See https://docs.github.com/en/rest/actions/cache?apiVersion=2022-11-28#delete-a-github-actions-cache-for-a-repository-using-a-cache-id
      contents: read
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      # Checkout the repository
      - name: Checkout  üéØ
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Get the platforms from the docker-bake.hcl file
      - name: Get platforms üîç
        id: get-platforms
        shell: bash
        run: echo "platforms=$(docker buildx bake _platforms --print | jq -cr '.target._platforms.platforms' | sed 's|\"|\\\"|g')" >> ${GITHUB_OUTPUT}

      # Set the matrix
      - name: Set matrix üé®
        id: set-matrix
        shell: bash
        run: echo "matrix={ \"platform\":${{ steps.get-platforms.outputs.platforms }} }" >> ${GITHUB_OUTPUT}

      # Show the matrix
      - name: Show matrix üìä
        shell: bash
        run: echo ${{ fromJson(steps.set-matrix.outputs.matrix) }}

      # Restore cached repository
      # https://github.com/actions/cache/tree/main/restore
      - name: Restore cached repository üì¶
        id: restore
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}/texlive/
          key: rsync-${{ github.sha }}
          restore-keys: rsync-
          fail-on-cache-miss: false

      - name: Run rsync üìÅ
        shell: bash
        run: ${{ github.workspace }}/script/rsync.sh ${{ env.REPO }} ${{ github.workspace }}/texlive/ --exclude-from=${{ github.workspace }}/rsyncignore.txt

      # Save repository to cache
      # https://github.com/actions/cache/tree/main/save
      - name: Save repository to cache üíæ
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}/texlive/
          key: rsync-${{ github.sha }}

      # Workaround: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#force-deletion-of-caches-overriding-default-cache-eviction-policy
      - name: Delete old repo cache üóëÔ∏è
        if: ${{ steps.restore.outputs.cache-hit }}
        shell: bash
        run: |
          gh extension install actions/gh-actions-cache

          [ $(gh actions-cache list -R ${{ github.repository }} -B ${{ github.ref }} --key rsync- | wc -l) -lt 2 ] && exit 0
          gh actions-cache delete ${{ steps.restore.outputs.cache-matched-key }} -R ${{ github.repository }} --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: pre-build
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.pre-build.outputs.matrix) }}
    permissions:
      contents: read

    steps:
      # Get platform architecture
      - name: Get architecture üñ•Ô∏è
        id: get-arch
        shell: bash
        run: |
          platform=${{ matrix.platform }}
          echo "arch=${platform#*\/}" >> ${GITHUB_OUTPUT}

      # Checkout the repository
      - name: Checkout  üéØ
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Restore cached repository
      # https://github.com/actions/cache/tree/main/restore
      - name: Restore cached repository üì¶
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}/texlive/
          key: rsync-${{ github.sha }}
          fail-on-cache-miss: true

      # Get the release version of the repository
      - name: Get TeX Live release version üîñ
        id: tl-release
        shell: bash
        run: echo "number=$(find ${{ github.workspace }}/texlive/ -name 'TEXLIVE_*' -print0 | sed -e s/[^0-9]//g)" >> ${GITHUB_OUTPUT}

      # Add support for more platforms with QEMU
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU üíª
        uses: docker/setup-qemu-action@v2

      # Add support for Buildx
      # https://github.com/docker/setup-buildx-action
      - name: Setup buildx üîß
        uses: docker/setup-buildx-action@v2

      # Extract metadata (tags, labels)
      # https://github.com/docker/metadata-action
      - name: Extract metadata üîç
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          bake-target: metadata-action-bullseye-full
          flavor: |
            latest=auto
            prefix=TL${{ steps.tl-release.outputs.number }}-bullseye-full-,onlatest=false
          tags: |
            type=schedule,pattern=nightly
            type=schedule,pattern=nightly-{{date 'YYYYMMDD' tz='Asia/Tokyo'}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha,prefix=TL${{ steps.tl-release.outputs.number }}-bullseye-full-,format=short
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}

      # Merge metadata (labels, tags) with build args
      # Workaround: https://github.com/docker/metadata-action/issues/124#issuecomment-1018441005
      - name: Merge metadata üöö
        id: merge
        run: jq -s '.[0]' ${{ steps.meta.outputs.bake-file }} > docker-bake.override.json

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into ${{ env.REGISTRY }} üì®
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image with Bake
      # https://github.com/docker/bake-action
      - name: Build / Push image üê≥
        uses: docker/bake-action@v2
        with:
          files: docker-bake.hcl,docker-bake.override.json
          set: |
            *.args.RELEASE=${{ steps.tl-release.outputs.number }}
            *.cache-to=type=registry,mode=max,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,oci-mediatypes=true
            *.cache-from=type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
            *.platform=${{ matrix.platform }}
        env:
          PUSH: ${{ github.event_name != 'pull_request' }}

      # Cleanup repository
      - name: Cleanup üßπ
        shell: bash
        run: |
          echo "::group::Current disk"
          df -h
          tree -nhL 2
          echo "::endgroup::"

          rm -rfv texlive
          df -h

      # Upload artifacts
      # https://github.com/actions/upload-artifact
      - name: Upload artifacts üìö
        uses: actions/upload-artifact@v3
        with:
          name: TL${{ steps.tl-release.outputs.number }}-${{ steps.get-arch.outputs.arch }}
          path: texlive.oci
          if-no-files-found: error
