name: Docker

on:
  schedule:
    - cron: '0 3 * * 0,3,6'
  workflow_dispatch:
  pull_request:
    branches: [ 'master' ]
  push:
    tags: [ 'v*' ]

env:
  BUILDKIT_PROGRESS: plain
  REGISTRY: ${{ vars.REGISTRY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  REPO: ${{ vars.REPO }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Checkout the repository
      - name: Checkout  üéØ
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Restore cached repository
      # https://github.com/actions/cache/tree/main/restore
      - name: Restore cached repository üì¶
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}/texlive/
          key: rsync-${{ github.sha }}
          restore-keys: rsync-
          fail-on-cache-miss: false

      - name: Run rsync üìÅ
        shell: bash
        run: ${{ github.workspace }}/script/rsync.sh ${{ env.REPO }} ${{ github.workspace }}/texlive/ --exclude-from=${{ github.workspace }}/rsyncignore.txt

      # Save repository to cache
      # https://github.com/actions/cache/tree/main/save
      - name: Save repository to cache üíæ
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}/texlive/
          key: rsync-${{ github.sha }}

      # Get the release version of the repository
      - name: Get TeX Live release version üîñ
        id: tl-release
        shell: bash
        run: echo "number=$(find ${{ github.workspace }}/texlive/ -name 'TEXLIVE_*' -print0 | sed -e s/[^0-9]//g)" >> ${GITHUB_OUTPUT}

      # Add support for more platforms with QEMU
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU üíª
        uses: docker/setup-qemu-action@v2

      # Add support for Buildx
      # https://github.com/docker/setup-buildx-action
      - name: Setup buildx üîß
        uses: docker/setup-buildx-action@v2

      # Extract metadata (tags, labels)
      # https://github.com/docker/metadata-action
      - name: Extract metadata üîç
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          bake-target: metadata-action-bullseye-full
          flavor: |
            latest=auto
            prefix=TL${{ steps.tl-release.outputs.number }}-bullseye-full-,onlatest=false
          tags: |
            type=schedule,pattern=nightly
            type=schedule,pattern=nightly-{{date 'YYYYMMDD' tz='Asia/Tokyo'}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha,prefix=,format=short
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}

      # Merge metadata (labels, tags) with build args
      # Workaround: https://github.com/docker/metadata-action/issues/124#issuecomment-1018441005
      - name: Merge metadata üöö
        id: merge
        run: jq -s '.[0]' ${{ steps.meta.outputs.bake-file }} > docker-bake.override.json

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into ${{ env.REGISTRY }} üì®
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image with Bake
      # https://github.com/docker/bake-action
      - name: Build / Push Docker image üê≥
        uses: docker/bake-action@v2
        with:
          files: docker-bake.hcl,docker-bake.override.json
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            pkg.args.RELEASE=${{ steps.tl-release.outputs.number }}
            pkg.output=type=tar,dest=build/
            pkg.tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:testing
            bullseye-*.output=type=image,push=${{ github.event_name != 'pull_request' }}

      # Upload artifacts
      # https://github.com/actions/upload-artifact
      - name: Upload artifacts üìö
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: build/
